"""changed column nullable

Revision ID: 03bb7ee4e504
Revises: 01a4b14bf9e6
Create Date: 2021-01-24 21:21:09.009364

"""
import gino.dialects.asyncpg
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '03bb7ee4e504'
down_revision = '01a4b14bf9e6'
branch_labels = None
depends_on = None


def upgrade():
    contact_statuses = gino.dialects.asyncpg.AsyncEnum(
        'NOT_STARTED', 'OPERATING', 'CANCELLED', 'DONE', name='contractstatus'
    )

    connection = op.get_bind()

    t_contracts = sa.Table(
        'contracts',
        sa.MetaData(),
        sa.Column('number', sa.String),
        sa.Column('status', contact_statuses),
        sa.Column('path', sa.String),
        sa.Column('start_date', sa.DateTime),
        sa.Column('end_date', sa.DateTime),
        sa.Column('provider_id', sa.Integer),
        sa.Column('cancel_description', sa.String),
    )

    connection.execute(
        sa.insert(t_contracts).values([{
            'number': 'КИФА2401',
            'status': 'CANCELLED',
            'path': 'media/temp.doc',
            'start_date': '2021-01-01T20:26:36Z',
            'end_date': '2021-01-01T20:26:36Z',
            'provider_id': 1,
            'cancel_description': '',
        }])
    )

    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('purchases', sa.Column('contract_id', sa.Integer(), nullable=True))
    op.alter_column('purchases', 'product_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('purchases', 'warehouse_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_unique_constraint(None, 'purchases', ['address'])
    op.create_foreign_key(None, 'purchases', 'warehouses', ['contract_id'], ['id'])
    op.alter_column('supplies', 'branch_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('supplies', 'product_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('supplies', 'warehouse_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    # ### end Alembic commands ###

    t_purchases = sa.Table(
        'purchases',
        sa.MetaData(),
        sa.Column('contract_id', sa.Integer)
    )
    connection.execute(
        t_purchases.update(t_purchases).values(contract_id=1)
    )


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('supplies', 'warehouse_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('supplies', 'product_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('supplies', 'branch_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_constraint(None, 'purchases', type_='foreignkey')
    op.drop_constraint(None, 'purchases', type_='unique')
    op.alter_column('purchases', 'warehouse_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('purchases', 'product_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('purchases', 'contract_id')
    # ### end Alembic commands ###
